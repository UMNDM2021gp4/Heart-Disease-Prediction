import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

import matplotlib.pyplot as plt
import scipy as sp

plt.style.use('fivethirtyeight')

df = pd.read_csv('/kaggle/input/heart-disease-uci/heart.csv')
df.describe()

from sklearn.preprocessing import StandardScaler, MinMaxScaler, Normalizer
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, plot_confusion_matrix, plot_roc_curve, classification_report

scaler = StandardScaler()
scaler.fit(df.drop('target', axis=1))  

X = scaler.transform(df.drop('target', axis=1))  # TARGET SÜTUNUNU YANİ SONUCU ÇIKARDIK 
y = df.target   # SADECE SONUCU ALDIK
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=200)  

from sklearn.neighbors import KNeighborsClassifier
model = KNeighborsClassifier()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

print("Acc:",accuracy_score(y_test, y_pred))

plot_confusion_matrix(model, X_test, y_test, cmap='OrRd')
plt.grid(False)
plt.show()

plot_roc_curve(model, X_test, y_test)
plt.plot([0,1],[0,1],'k--')
plt.show()

target_names = ['class 0', 'class 1']
print("Detailed classification report:")
print()  
print(classification_report(y_test, y_pred, target_names=target_names))    #precision(kesinlik)
print()